import { TestBed } from '@angular/core/testing';
import { Store } from '@ngrx/store';
import { provideMockStore, MockStore } from '@ngrx/store/testing';

import { <%= classify(name) %>Facade } from './<%= dasherize(name) %>.facade';

describe('StoreFacade: <%= classify(name) %>', () => {
  const initialState = {};

  let store: MockStore<{}>;
  let facade: <%= classify(name) %>Facade;

  beforeEach(() => {
    TestBed.configureTestingModule({
      providers: [
        provideMockStore({ initialState }),
        <%= classify(name) %>Facade
      ],
    });

    store = TestBed.inject(Store) as any;
    facade = TestBed.inject(<%= classify(name) %>Facade);
  });

  it('dispatches the action', () => {
    const spyDispatch = spyOn(store, 'dispatch');
    facade.loadData.dispatch(1);
    expect(spyDispatch).toHaveBeenCalled();
  });

  it('yields the action', () => {
    expect(facade.loadData(1)).toEqual({
      type: '[<%= classify(name) %>] Sample triggering action',
      payload: 1
    });
  });
});
