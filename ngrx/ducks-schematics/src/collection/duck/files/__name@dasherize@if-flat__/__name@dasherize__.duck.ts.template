import {
  Action,
  DucksifiedAction,
  Ducksify,<% if (effects) { %>
  effect,<% } %>
  reducerFrom
} from '@co-it/ngrx-ducks';<% if (selectors) { %>
import * as selectors from './<%= dasherize(name) %>.selectors';<% } %>
import { <%= classify(name) %>State } from './<%= dasherize(name) %>.state';

@Ducksify<<%= classify(name) %>State>({
  initialState: {
    data: 0
  }
})
export class <%= classify(name) %> {<% if (selectors) { %>
  data$ = selectors.data;
<% } %><% if (effects) { %>
  readonly loadData = effect<number>('[<%= classify(name) %>] Sample effect');
<% } %>
  @Action('[<%= classify(name) %>] Sample action type')
  setData(stateSlice: <%= classify(name) %>State, data: number): <%= classify(name) %>State {
    return { ...stateSlice, data };
  }
}

export function <%= camelize(name) %>Reducer(
  state: <%= classify(name) %>State | undefined,
  action: DucksifiedAction
): <%= classify(name) %>State {
  return reducerFrom(<%= classify(name) %>)(state, action);
}
